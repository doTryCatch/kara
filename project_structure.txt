/ai-assistant
│
├── /client                     # Frontend/UI (Next.js + Electron)
│   ├── /assets                 # UI assets (images, fonts, etc.)
│   ├── /components             # React components for UI (Next.js)
│   ├── /pages                  # Next.js routes for UI (e.g., index.js)
│   ├── /styles                 # CSS files for styling
│   ├── main.js                 # Electron main process file
│   ├── preload.js              # Electron preload file
│   ├── package.json            # Dependencies and scripts for Next.js + Electron
│   ├── next.config.js          # Next.js configuration
│   └── out/                    # Static Next.js build output for Electron
│
├── /server                     # Backend server for API, task processing, and logic
│   ├── /api                    # API handlers (file read/write, system tasks, etc.)
│   │   ├── index.js            # Express or FastAPI setup for handling API requests
│   │   └── routes.js           # Define backend API routes
│   ├── /models                 # Python machine learning models and AI logic
│   │   ├── ai_model.py         # AI model processing (e.g., TensorFlow, PyTorch)
│   │   └── model_utils.py      # Helper functions for AI tasks
│   ├── /rust_tasks             # Rust code for system-level performance-critical tasks
│   │   ├── Cargo.toml          # Rust package manifest
│   │   ├── src
│   │   │   ├── lib.rs          # Rust core functions for file operations, real-time tasks
│   │   │   └── bindings.rs     # Rust FFI bindings to interact with Python (using PyO3)
│   │   └── target/             # Compiled Rust binaries
│   ├── /logs                   # Log files for tracking operations and events
│   ├── /scripts                # Shell or helper scripts for building or automating tasks
│   └── server.js               # Node.js or Python server entry point (e.g., FastAPI or Express)
│
├── /integration                # Rust and Python integration for AI assistant
│   ├── rust_python_bridge.rs   # FFI bridge between Rust and Python (using PyO3 or FFI)
│   ├── python_interface.py     # Python interface to call Rust functions
│   └── setup.py                # Python setup for building Rust extensions (if needed)
│
└── README.md                   # Project documentation
